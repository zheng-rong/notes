


======================= Qground control =============
Ref: https://github.com/mavlink/qgroundcontrol/blob/master/README.md


Qgroundcontrol:
http://qgroundcontrol.org/dev/build_source
https://github.com/mavlink/qgroundcontrol.git

installation instruction:
https://github.com/mavlink/qgroundcontrol/blob/master/README.md

git clone git://github.com/mavlink/qgroundcontrol.git 
cd qgroundcontrol 
git submodule init 
git submodule update

sudo add-apt-repository ppa:ubuntu-toolchain-r/test 
sudo apt-add-repository ppa:ubuntu-sdk-team/ppa 
sudo apt-get update


Error: libqt5serialport5-dev

http://askubuntu.com/questions/279421/how-can-i-install-qt-5-x-on-12-04-ltsr

Install Qt 5.2 on Ubuntu 13.10
This article on Qt official site is old. Today, I try to install Qt 5.2.0 on my Ubuntu 13.10. Below is my steps:

1. Download Qt 5.2.0 for Linux

http://qt-project.org/downloads

    wget http://download.qt-project.org/official_releases/qt/5.2/5.2.0/qt-linux-opensource-5.2.0-x86_64-offline.run


2.  Give the downloaded file execute permission, then execute it

    chmod +x ./qt-linux-opensource-5.2.0-x86_64-offline.run
    ./qt-linux-opensource-5.2.0-x86_64-offline.run

You will see one setup dialog, following the setup wizard.



=================== GitHub Basics ====================
git add file-name
git commit -m "commit message"
git push

git rm file-name
git commit -m "remove a file"
git push

# modify file-1
git commit file-1 -m "modify this file"
git push



---------------------------------------------------------------
--------------------- Setting up your laptop ------------------
---------------------------------------------------------------

1. install Ubuntu
sudo apt-get update
sudo apt-get upgrade

2. basic setting
input method
language support
ibus-setup
 
3. set up the bash
Ref: https://help.ubuntu.com/community/CustomizingBashPrompt
gedit .bashrc
uncomment:
#force_color_prompt=yes 

4. install logitech unifying
sudo add-apt-repository ppa:daniel.pavel/solaar
sudo apt-get update
sudo apt-get install solaar

5. install　ROS


6. install vim install mv-camera-driver
reboot
test via wxPropView
install ROS-camera-driver
copy camera calibration file
test image_view
test stereo_view

7. download sandbox
git clone URL
./update --devel


8. follow Ellen's note
install IPC
install Matlab


9. install gperftools

10. install sublime-text 

For Sublime-Text-3:
sudo add-apt-repository ppa:webupd8team/sublime-text-3
sudo apt-get update
sudo apt-get install sublime-text-installer

11. install others
install tex-live
install tex-maker
install skype
install dropbox
install everpad
install Gparted
install partitionmanager









===================================================
=============== px4 WiKi ==========================
===================================================
px4 quick start:
https://pixhawk.org/dev/px4_quickstart

============== use NuttShell ======================
Ref: https://pixhawk.org/users/serial_connection
NuttShell (NSH) via Seiral using the kermit:

sudo apt-get install ckermit
Set your default settings to the correct settings for px4 using the follow code:
echo "SET LINE /dev/ttyUSB0
SET SPEED 57600
SET CARRIER-WATCH OFF
SET FLOW-CONTROL NONE" > ~/.kermrc

~/.kermrc
ls /dev/ttyU*     
sudo kermit
connect
enter

[command]
ls free cd ...

[quit]
Ctrl+\  and C and quit

============== build and flash the firmware =============

cd ~/src
git clone https://github.com/PX4/Firmware
cd Firmware
---------------- GitLab ------------------------------
git clone git@nmichael.frc.ri.cmu.edu:px4/px4_patches.git
git checkout -b cmu_develop `cat px4_patches/px4_master_hash`
git apply --ignore-space-change --ignore-whitespace px4_patches/px4_master_to_cmu_develop_version.diff
rm -fr src/modules/cmu_rc_command src/modules/cmu_pwm_command src/modules/cmu_attitude_estimator_so3 src/modules/cmu_voltage_monitor
git submodule add git@nmichael.frc.ri.cmu.edu:px4/cmu_rc_command.git src/modules/cmu_rc_command
git submodule add git@nmichael.frc.ri.cmu.edu:px4/cmu_voltage_monitor.git src/modules/cmu_voltage_monitor
git submodule add git@nmichael.frc.ri.cmu.edu:px4/cmu_attitude_estimator_so3.git src/modules/cmu_attitude_estimator_so3
git clone https://github.com/PX4/NuttX
-------------------------------------------------------

git submodule init
git submodule update

------------------- GitLab ----------------------------
vim makefiles/config_px4fmu-v1_default.mk

change line 129:
From:
MODULES                += modules/cmu_pwm_command
To:
#MODULES                += modules/cmu_pwm_command
-------------------------------------------------------

cd ~/src/Firmware
make distclean
make archives
make
sudo usermod -a -G dialout $USER
Log out and log in in linux for changes to take effect. (Very Important!)
make upload px4fmu-v1_default



The result should be:

working in [...]/Firmware/Images
Attempting to flash PX4FMU board via USB
Loaded firmware for 5,0, waiting for the bootloader...

When you see “waiting for the bootloader” press the “reset” button on the side of the PX4FMU. If the board is now connected & reset, the new firmware will be flashed.

Found board 5,0 on /dev/tty[...]
erase...
program...
verify...
done, rebooting.

=============== Troubleshooting ======================================
Board not found (Affects mostly Ubuntu 12.10 users)
In case the board is not found, make sure you remove the modem-manager by:
sudo apt-get remove modemmanager

Permission Denied
If you have no permissions for /dev/ttyACM0 , make sure the user is in group dialout (as described above).

To find out the device name (if not /dev/ttyACM0), do a
ls /dev/tty*
when the bootloader is loading (first 5 seconds after reset).

=============== odroid cmu_mavlink ==============================
odroid sandbox update failed like this:
[ 12%] Performing download step (git clone) for 'mavlink'
Cloning into 'mavlink'...
fatal: unable to access 'https://github.com/mavlink/mavlink.git/': server certificate verification failed. CAfile: /etc/ssl/certs/ca-certificates.crt CRLfile: none
solution:
git config --global http.sslverify false
Ref: https://github.com/gitlabhq/gitlabhq/issues/4272#issuecomment-22074932

after the update, 
catkin_make the dry;
catkin_make the wet;

vim cmu_mavlink/cmu_mavlink_only.launch
baudrate:230400
serialport:/dev/ttyUSB0








